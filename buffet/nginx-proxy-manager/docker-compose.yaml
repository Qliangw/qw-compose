version: "3"

networks:
  br-public:
    name: "${NPM_NETWORK}"
    external: true
  br-secure:
    name: "${NPM_DB_NETWORK}"
    external: true

services:
  npm.qw:
    image: 'jc21/nginx-proxy-manager:2.12.6'
    container_name: npm-nginx
    restart: unless-stopped
    networks:
      - "br-public"
      - "br-secure"
    ports:
      # These ports are in format <host-port>:<container-port>
      - '${NPM_HTTP_PORT}:80' # Public HTTP Port
      - '${NPM_HTTPS_PORT}:443' # Public HTTPS Port
      - '${NPM_ADMIN_PORT}:81' # Admin Web Port
      # Add any other Stream port you want to expose
      # - '${NPM_FTP_PORT}:21' # FTP
    environment:
      # Postgres parameters:
      DB_POSTGRES_HOST: 'db.npm.qw'
      DB_POSTGRES_PORT: '${NPM_DB_PORT}'
      DB_POSTGRES_USER: '${NPM_DB_USER}'
      DB_POSTGRES_PASSWORD: '${NPM_DB_PASSWORD}'
      DB_POSTGRES_NAME: '${NPM_DB_NAME}'
      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'
    volumes:
      - "${DATA_ROOT}/nginx-proxy-manager/data:/data"
      - "${DATA_ROOT}/nginx-proxy-manager/letsencrypt:/etc/letsencrypt"
    depends_on:
      - "db.npm.qw"

  db.npm.qw:
    image: postgres:17.4-bookworm
    container_name: npm-db
    restart: unless-stopped
    networks:
      - "br-secure"
    environment:
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_NAME}'
    volumes:
      - "${DATA_ROOT}/nginx-proxy-manager/postgres:/var/lib/postgresql/data"
